{"version":3,"file":"johnmakridis-ngx-image-gallery.mjs","sources":["../../../src/projects/ngx-image-gallery/src/lib/directives/mousewheel.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.ts","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.html","../../../src/projects/ngx-image-gallery/src/lib/directives/click-outside.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/index.ts","../../../src/projects/ngx-image-gallery/src/public-api.ts","../../../src/projects/ngx-image-gallery/src/johnmakridis-ngx-image-gallery.ts"],"sourcesContent":["import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n@Directive({\n    selector: '[mouseWheel]',\n    standalone: false\n})\nexport class MouseWheelDirective {\n  @Output() mouseWheelUp = new EventEmitter();\n  @Output() mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event']) onMouseWheelChrome(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event']) onMouseWheelFirefox(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event']) onMouseWheelIE(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any) {\n    var event = window.event || event; // old IE support\n    var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n    if(delta > 0) {\n        this.mouseWheelUp.emit(event);\n    } else if(delta < 0) {\n        this.mouseWheelDown.emit(event);\n    }\n    // for IE\n    event.returnValue = false;\n    // for Chrome and Firefox\n    if(event.preventDefault) {\n        event.preventDefault();\n    }\n  }\n}","import {\n    Component,\n    OnInit,\n    HostBinding,\n    Input,\n    HostListener,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport {assign, debounce} from 'lodash';\n\nimport {GALLERY_CONF, GALLERY_IMAGE} from '../../ngx-image-gallery.conf';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// key codes to react\nconst KEY_CODES = {\n    37: 'LEFT',\n    39: 'RIGHT',\n    27: 'ESC'\n};\n\n// default gallery configuration\nconst DEFAULT_CONF: GALLERY_CONF = {\n    imageBorderRadius: '3px',\n    imageOffset: '20px',\n    imagePointer: false,\n    showDeleteControl: false,\n    showCloseControl: true,\n    showExtUrlControl: true,\n    showImageTitle: true,\n    showThumbnails: true,\n    closeOnEsc: true,\n    reactToKeyboard: true,\n    reactToMouseWheel: true,\n    reactToRightClick: false,\n    thumbnailSize: 30,\n    backdropColor: 'rgba(13,13,14,0.85)',\n    inline: false,\n    showArrows: true\n};\n\n@Component({\n    selector: 'ngx-image-gallery',\n    templateUrl: './ngx-image-gallery.component.html',\n    styleUrls: ['./ngx-image-gallery.component.scss'],\n    standalone: false\n})\nexport class NgxImageGalleryComponent implements OnInit, OnChanges {\n\n    // gallery opened memory\n    @HostBinding('class.active') opened: boolean = false;\n\n    // gallery configuration\n    @Input() conf: GALLERY_CONF = {};\n\n    // gallery images\n    @Input() images: GALLERY_IMAGE[] = [];\n\n    // event emmiters\n    @Output() onOpen = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onDelete = new EventEmitter();\n    @Output() onImageChange = new EventEmitter();\n    @Output() onImageClicked = new EventEmitter();\n    @Output() onError = new EventEmitter();\n\n    // thumbnails container\n    @ViewChild('thumbnails') thumbnailsElem: ElementRef;\n\n    /***************************************************/\n\n    // loading animation memory\n    loading: boolean = false;\n\n    // current active image index\n    activeImageIndex: number = null;\n\n    // thumbnail margin and scroll position\n    thumbnailMargin: string = '0px 8px';\n    thumbnailsScrollerLeftMargin: string = '0px';\n\n    // active image\n    get activeImage(): GALLERY_IMAGE {\n        return this.images[this.activeImageIndex];\n    }\n\n    // if gallery is on : first image\n    get onFirstImage(): boolean {\n        return this.activeImageIndex == 0;\n    }\n\n    // if gallery is on : last image\n    get onLastImage(): boolean {\n        return this.activeImageIndex == (this.images.length - 1);\n    }\n\n    // get thumbnails viewport rendering parameters\n    get thumbnailsRenderParams(): { thumbnailsInView: number, newThumbnailMargin: number, newThumbnailSize: number, thumbnailsScrollerLeftMargin: any } {\n        let thumbnailsContainerWidth = this.thumbnailsElem.nativeElement.offsetWidth;\n\n        let thumbnailMargin = 16;\n        let thumbnailSize = thumbnailMargin + this.conf.thumbnailSize;\n        let thumbnailsInView = Math.floor(thumbnailsContainerWidth / thumbnailSize);\n        let extraSpaceInThumbnailsContainer = thumbnailsContainerWidth - (thumbnailsInView * thumbnailSize);\n        let extraMargin = extraSpaceInThumbnailsContainer / thumbnailsInView;\n\n        let newThumbnailMargin = thumbnailMargin + extraMargin;\n        let newThumbnailSize = newThumbnailMargin + this.conf.thumbnailSize;\n\n        let relativePositionOfActiveImageThumbnailToScroller = thumbnailsInView - (thumbnailsInView - this.activeImageIndex);\n        let thumbnailsScrollerLeftMargin: any;\n\n        if (relativePositionOfActiveImageThumbnailToScroller > thumbnailsInView - 2) {\n            var outThumbnails = ((this.activeImageIndex + 1) - thumbnailsInView) + 1;\n\n            if (this.activeImageIndex != (this.images.length - 1)) {\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * outThumbnails) + 'px';\n            }\n            else {\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * (outThumbnails - 1)) + 'px';\n            }\n        } else {\n            thumbnailsScrollerLeftMargin = '0px';\n        }\n\n        return {\n            thumbnailsInView,\n            newThumbnailMargin,\n            newThumbnailSize,\n            thumbnailsScrollerLeftMargin\n        };\n    }\n\n    // set gallery configuration\n    private setGalleryConf(conf: GALLERY_CONF) {\n        this.conf = assign(DEFAULT_CONF, conf);\n    }\n\n    // load image and return promise\n    private loadImage(index: number): Promise<any> {\n        const galleryImage: GALLERY_IMAGE = this.images[index];\n\n        // check if image is cached\n        if (galleryImage._cached) {\n            return Promise.resolve(index);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.loading = true;\n\n                let image = new Image();\n                image.src = galleryImage.url;\n\n                image.onload = () => {\n                    this.loading = false;\n                    galleryImage._cached = true;\n                    resolve(index);\n                };\n\n                image.onerror = (error) => {\n                    this.loading = false;\n                    reject(error);\n                };\n            });\n        }\n    }\n\n    // activate image (set active image)\n    private activateImage(imageIndex: number) {\n        // prevent loading if already loading\n        if (this.loading) return false;\n\n        // emit event\n        this.onImageChange.emit(imageIndex);\n\n        this.loadImage(imageIndex)\n            .then(_imageIndex => {\n                this.activeImageIndex = _imageIndex;\n                // Trigger change detection manually to support ChangeDetectionStrategy.OnPush\n                this.cdRef.detectChanges();\n\n                // scroll thumbnails\n                setTimeout(() => {\n                    this.fitThumbnails();\n                    setTimeout(() => this.scrollThumbnails(), 300);\n                });\n            })\n            .catch(error => {\n                console.warn(error)\n                this.onError.next(error);\n            });\n    }\n\n    // adjust thumbnail margin to perfectly fit viewport\n    private fitThumbnails = debounce(() => {\n        // if thumbnails not visible, return false\n        if (this.conf.showThumbnails == false) return false;\n\n        let thumbnailParams = this.thumbnailsRenderParams;\n        this.thumbnailMargin = '0 ' + (thumbnailParams.newThumbnailMargin / 2) + 'px';\n    }, 300);\n\n    // scroll thumbnails to perfectly position active image thumbnail in viewport\n    private scrollThumbnails() {\n        // if thumbnails not visible, return false\n        if (this.conf.showThumbnails == false) return false;\n\n        let thumbnailParams = this.thumbnailsRenderParams;\n        this.thumbnailsScrollerLeftMargin = thumbnailParams.thumbnailsScrollerLeftMargin;\n    }\n\n    // debounced prev\n    private debouncedPrev = debounce(() => this.prev(), 100, {'leading': true, 'trailing': false});\n\n    // debounced next\n    private debouncedNext = debounce(() => this.next(), 100, {'leading': true, 'trailing': false});\n\n    /***************************************************/\n\n    constructor(\n        public sanitizer: DomSanitizer,\n        private galleryElem: ElementRef,\n        private renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    ngOnInit() {\n        // create final gallery configuration\n        this.setGalleryConf(this.conf);\n\n        // apply backdrop color\n        this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n        // gallery inline class and auto open\n        if (this.conf.inline) {\n            this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n            this.open(0);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // when gallery configuration changes\n        if (changes.conf && changes.conf.firstChange == false) {\n            this.setGalleryConf(changes.conf.currentValue);\n\n            // apply backdrop color\n            this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n            // gallery inline class and auto open\n            if ((changes.conf.previousValue.inline != true) && this.conf.inline) {\n                this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n                this.open(0);\n            }\n        }\n\n        // when gallery images changes\n        if (changes.images && changes.images.firstChange == false) {\n            this.images = changes.images.currentValue;\n\n            if (this.images.length) {\n                this.activateImage(0);\n            }\n        }\n\n    }\n\n    // keyboard event\n    @HostListener('window:keydown', ['$event'])\n    public onKeyboardInput(event: KeyboardEvent) {\n        if (this.conf.reactToKeyboard && this.opened && !this.loading) {\n            if (KEY_CODES[event.keyCode] == 'RIGHT') {\n                this.next();\n            }\n            else if (KEY_CODES[event.keyCode] == 'LEFT') {\n                this.prev();\n            }\n            else if ((KEY_CODES[event.keyCode] == 'ESC') && this.conf.closeOnEsc) {\n                this.close();\n            }\n        }\n    }\n\n    // window resize event\n    @HostListener('window:resize', ['$event'])\n    public onWindowResize(event: Event) {\n        if (this.opened && !this.loading) {\n            this.fitThumbnails();\n            setTimeout(() => this.scrollThumbnails(), 300);\n        }\n    }\n\n    /***************************************************/\n\n    // open gallery\n    open(index: number = 0) {\n        if (this.images.length) {\n            this.opened = true;\n\n            // emit event\n            this.onOpen.emit(index);\n\n            // activate image at given index\n            this.activateImage(index);\n        }\n        else {\n            console.warn('No images provided to ngx-image-gallery!');\n        }\n    }\n\n    // close gallery\n    close() {\n        this.opened = false;\n        this.activeImageIndex = 0;\n\n        // emit event\n        this.onClose.emit();\n    }\n\n    // change prev image\n    prev() {\n        if (this.onFirstImage == false) {\n            this.activateImage(this.activeImageIndex - 1);\n        }\n    }\n\n    // change next image\n    next() {\n        if (this.onLastImage == false) {\n            this.activateImage(this.activeImageIndex + 1);\n        }\n    }\n\n    // set image (activate)\n    setActiveImage(index: number) {\n        this.activateImage(index);\n    }\n\n    // delete image\n    deleteImage(index: number) {\n        this.onDelete.emit(index);\n    }\n\n    // mouse wheel up (prev image)\n    mouseWheelUp() {\n        if (this.conf.reactToMouseWheel) {\n            this.debouncedNext();\n        }\n    }\n\n    // mouse wheel down (next image)\n    mouseWheelDown() {\n        if (this.conf.reactToMouseWheel) {\n            this.debouncedPrev();\n        }\n    }\n\n    // click on image\n    clickOnImage(index: number) {\n        this.onImageClicked.emit(index);\n    }\n\n    // right click on image\n    rightClickOnImage(event: Event) {\n        event.stopPropagation();\n        return this.conf.reactToRightClick;\n    }\n\n}\n","<!-- images and image information container -->\n<div class=\"galleria\" mouseWheel (mouseWheelDown)=\"mouseWheelDown()\" (mouseWheelUp)=\"mouseWheelUp()\"\n  (contextmenu)=\"rightClickOnImage($event)\">\n  <!-- images -->\n  <div class=\"images-container\" (swiperight)=\"prev()\" (swipeleft)=\"next()\">\n    <!-- images array -->\n    @for (image of images; track image; let i = $index) {\n      <div class=\"image\"\n        [class.active]=\"!loading && (i == activeImageIndex)\"\n        [ngStyle]=\"{top: conf.imageOffset, bottom: conf.imageOffset}\">\n        @if (i == activeImageIndex) {\n          <img [src]=\"sanitizer.bypassSecurityTrustUrl(image.url)\" [alt]=\"image.altText || ''\"\n            [style.cursor]=\"conf.imagePointer?  'pointer':'default'\"\n            [style.borderRadius]=\"conf.imageBorderRadius\" (click)=\"clickOnImage(activeImageIndex)\"/>\n        }\n      </div>\n    }\n\n    <!-- loading animation -->\n    @if ((images.length == 0) || loading) {\n      <div class=\"loading-animation\">\n        <svg  version=\"1.1\" id=\"L3\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" xml:space=\"preserve\">\n          <circle fill=\"none\" stroke=\"#fff\" stroke-width=\"4\" cx=\"50\" cy=\"50\" r=\"44\" style=\"opacity:0.5;\"/>\n          <circle fill=\"#4caf50\" stroke=\"#eee\" stroke-width=\"3\" cx=\"8\" cy=\"54\" r=\"6\">\n            <animateTransform\n              attributeName=\"transform\"\n              dur=\"2s\"\n              type=\"rotate\"\n              from=\"0 50 48\"\n              to=\"360 50 52\"\n              repeatCount=\"indefinite\" />\n            <animate\n              attributeName=\"fill\"\n              begin=\"1s\"\n              dur=\"16s\"\n              values=\"#4caf50; #cddc39; #ff9800; #f44336; #e91e63; #ff5722; #ffeb3b; #4caf50\"\n              repeatCount=\"indefinite\" />\n            </circle>\n          </svg>\n        </div>\n      }\n    </div>\n\n    <!-- info and thumbnails -->\n    <div class=\"info-container\">\n      @if (conf.showImageTitle && !loading && activeImage && activeImage.title) {\n        <div class=\"title\"\n          [style.paddingBottom]=\"conf.showThumbnails ? '0px' : '30px'\"\n          [class.dark]=\"conf.inline\"\n          >{{ activeImage.title }}\n        </div>\n      }\n\n      @if (conf.showThumbnails) {\n        <div #thumbnails class=\"thumbnails\">\n          <div class=\"thumbnails-scroller\" [style.marginLeft]=\"thumbnailsScrollerLeftMargin\">\n            @for (image of images; track image; let i = $index) {\n              <div class=\"thumbnail\"\n                [class.active]=\"i == activeImageIndex\"\n                [style.backgroundImage]=\"sanitizer.bypassSecurityTrustStyle('url(' + (image.thumbnailUrl || image.url) + ')')\"\n                [style.margin]=\"thumbnailMargin\"\n                [style.width]=\"conf.thumbnailSize + 'px'\"\n                [style.height]=\"conf.thumbnailSize + 'px'\"\n                (click)=\"setActiveImage(i)\">\n                <div class=\"feedback\"></div>\n              </div>\n            }\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n\n\n  <!-- gallery controls -->\n  @if (conf.showArrows && (images.length > 1) && !loading) {\n    <div class=\"control arrow left\" [class.dark]=\"conf.inline\"\n    [class.disabled]=\"onFirstImage\" (click)=\"prev()\"></div>\n  }\n  @if (conf.showArrows && (images.length > 1) && !loading) {\n    <div class=\"control arrow right\" [class.dark]=\"conf.inline\"\n    [class.disabled]=\"onLastImage\" (click)=\"next()\"></div>\n  }\n\n  <div class=\"control right-top\">\n    @if (conf.showExtUrlControl && activeImage && activeImage.extUrl && !loading) {\n      <a class=\"ext-url\" [class.dark]=\"conf.inline\"\n        [href]=\"activeImage.extUrl\"\n        [target]=\"activeImage.extUrlTarget || '_blank'\">\n        <div class=\"feedback\"></div>\n      </a>\n    }\n    @if (conf.showCloseControl) {\n      <div class=\"close\" [class.dark]=\"conf.inline\" (click)=\"close()\">\n        <div class=\"feedback\"></div>\n      </div>\n    }\n  </div>\n\n  <div class=\"control left-top\">\n    @if (conf.showDeleteControl && !loading) {\n      <div class=\"delete-img\" [class.dark]=\"conf.inline\"\n        (click)=\"deleteImage(activeImageIndex)\">\n        <div class=\"feedback\"></div>\n      </div>\n    }\n  </div>\n","import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]',\n    standalone: false\n})\nexport class ClickOutsideDirective {\n  @Output() clickOutside: EventEmitter<any> = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick($event, targetElement) {\n    const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!isClickedInside) {\n      this.clickOutside.emit($event);\n    }\n  }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgxImageGalleryComponent} from './components/ngx-image-gallery/ngx-image-gallery.component';\nimport {ClickOutsideDirective} from './directives/click-outside.directive';\nimport {MouseWheelDirective} from './directives/mousewheel.directive';\n\nexport * from './components/ngx-image-gallery/ngx-image-gallery.component';\nexport * from './directives/click-outside.directive';\nexport * from './directives/mousewheel.directive';\nexport * from './ngx-image-gallery.conf';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgxImageGalleryComponent,\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ],\n    exports: [\n        NgxImageGalleryComponent,\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ]\n})\nexport class NgxImageGalleryModule {\n}\n","/*\n * Public API Surface of ngx-image-gallery\n */\n\nexport * from './lib/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3.MouseWheelDirective"],"mappings":"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"}