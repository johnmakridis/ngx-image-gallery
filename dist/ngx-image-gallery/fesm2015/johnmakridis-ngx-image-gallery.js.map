{"version":3,"file":"johnmakridis-ngx-image-gallery.js","sources":["../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.ts","../../../src/projects/ngx-image-gallery/src/lib/directives/click-outside.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/directives/mousewheel.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/index.ts","../../../src/projects/ngx-image-gallery/src/public-api.ts","../../../src/projects/ngx-image-gallery/src/johnmakridis-ngx-image-gallery.ts"],"sourcesContent":["import {\n    Component,\n    OnInit,\n    HostBinding,\n    Input,\n    HostListener,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport {assign, debounce} from 'lodash';\n\nimport {GALLERY_CONF, GALLERY_IMAGE} from '../../ngx-image-gallery.conf';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// key codes to react\nconst KEY_CODES = {\n    37: 'LEFT',\n    39: 'RIGHT',\n    27: 'ESC'\n};\n\n// default gallery configuration\nconst DEFAULT_CONF: GALLERY_CONF = {\n    imageBorderRadius: '3px',\n    imageOffset: '20px',\n    imagePointer: false,\n    showDeleteControl: false,\n    showCloseControl: true,\n    showExtUrlControl: true,\n    showImageTitle: true,\n    showThumbnails: true,\n    closeOnEsc: true,\n    reactToKeyboard: true,\n    reactToMouseWheel: true,\n    reactToRightClick: false,\n    thumbnailSize: 30,\n    backdropColor: 'rgba(13,13,14,0.85)',\n    inline: false,\n    showArrows: true\n};\n\n@Component({\n    selector: 'ngx-image-gallery',\n    templateUrl: './ngx-image-gallery.component.html',\n    styleUrls: ['./ngx-image-gallery.component.scss']\n})\nexport class NgxImageGalleryComponent implements OnInit, OnChanges {\n\n    // gallery opened memory\n    @HostBinding('class.active') opened: boolean = false;\n\n    // gallery configuration\n    @Input() conf: GALLERY_CONF = {};\n\n    // gallery images\n    @Input() images: GALLERY_IMAGE[] = [];\n\n    // event emmiters\n    @Output() onOpen = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onDelete = new EventEmitter();\n    @Output() onImageChange = new EventEmitter();\n    @Output() onImageClicked = new EventEmitter();\n    @Output() onError = new EventEmitter();\n\n    // thumbnails container\n    @ViewChild('thumbnails') thumbnailsElem: ElementRef;\n\n    /***************************************************/\n\n    // loading animation memory\n    loading: boolean = false;\n\n    // current active image index\n    activeImageIndex: number = null;\n\n    // thumbnail margin and scroll position\n    thumbnailMargin: string = '0px 8px';\n    thumbnailsScrollerLeftMargin: string = '0px';\n\n    // active image\n    get activeImage(): GALLERY_IMAGE {\n        return this.images[this.activeImageIndex];\n    }\n\n    // if gallery is on : first image\n    get onFirstImage(): boolean {\n        return this.activeImageIndex == 0;\n    }\n\n    // if gallery is on : last image\n    get onLastImage(): boolean {\n        return this.activeImageIndex == (this.images.length - 1);\n    }\n\n    // get thumbnails viewport rendering parameters\n    get thumbnailsRenderParams(): { thumbnailsInView: number, newThumbnailMargin: number, newThumbnailSize: number, thumbnailsScrollerLeftMargin: any } {\n        let thumbnailsContainerWidth = this.thumbnailsElem.nativeElement.offsetWidth;\n\n        let thumbnailMargin = 16;\n        let thumbnailSize = thumbnailMargin + this.conf.thumbnailSize;\n        let thumbnailsInView = Math.floor(thumbnailsContainerWidth / thumbnailSize);\n        let extraSpaceInThumbnailsContainer = thumbnailsContainerWidth - (thumbnailsInView * thumbnailSize);\n        let extraMargin = extraSpaceInThumbnailsContainer / thumbnailsInView;\n\n        let newThumbnailMargin = thumbnailMargin + extraMargin;\n        let newThumbnailSize = newThumbnailMargin + this.conf.thumbnailSize;\n\n        let relativePositionOfActiveImageThumbnailToScroller = thumbnailsInView - (thumbnailsInView - this.activeImageIndex);\n        let thumbnailsScrollerLeftMargin: any;\n\n        if (relativePositionOfActiveImageThumbnailToScroller > thumbnailsInView - 2) {\n            var outThumbnails = ((this.activeImageIndex + 1) - thumbnailsInView) + 1;\n\n            if (this.activeImageIndex != (this.images.length - 1)) {\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * outThumbnails) + 'px';\n            }\n            else {\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * (outThumbnails - 1)) + 'px';\n            }\n        } else {\n            thumbnailsScrollerLeftMargin = '0px';\n        }\n\n        return {\n            thumbnailsInView,\n            newThumbnailMargin,\n            newThumbnailSize,\n            thumbnailsScrollerLeftMargin\n        };\n    }\n\n    // set gallery configuration\n    private setGalleryConf(conf: GALLERY_CONF) {\n        this.conf = assign(DEFAULT_CONF, conf);\n    }\n\n    // load image and return promise\n    private loadImage(index: number): Promise<any> {\n        const galleryImage: GALLERY_IMAGE = this.images[index];\n\n        // check if image is cached\n        if (galleryImage._cached) {\n            return Promise.resolve(index);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.loading = true;\n\n                let image = new Image();\n                image.src = galleryImage.url;\n\n                image.onload = () => {\n                    this.loading = false;\n                    galleryImage._cached = true;\n                    resolve(index);\n                };\n\n                image.onerror = (error) => {\n                    this.loading = false;\n                    reject(error);\n                };\n            });\n        }\n    }\n\n    // activate image (set active image)\n    private activateImage(imageIndex: number) {\n        // prevent loading if already loading\n        if (this.loading) return false;\n\n        // emit event\n        this.onImageChange.emit(imageIndex);\n\n        this.loadImage(imageIndex)\n            .then(_imageIndex => {\n                this.activeImageIndex = _imageIndex;\n                // Trigger change detection manually to support ChangeDetectionStrategy.OnPush\n                this.cdRef.detectChanges();\n\n                // scroll thumbnails\n                setTimeout(() => {\n                    this.fitThumbnails();\n                    setTimeout(() => this.scrollThumbnails(), 300);\n                });\n            })\n            .catch(error => {\n                console.warn(error)\n                this.onError.next(error);\n            });\n    }\n\n    // adjust thumbnail margin to perfectly fit viewport\n    private fitThumbnails = debounce(() => {\n        // if thumbnails not visible, return false\n        if (this.conf.showThumbnails == false) return false;\n\n        let thumbnailParams = this.thumbnailsRenderParams;\n        this.thumbnailMargin = '0 ' + (thumbnailParams.newThumbnailMargin / 2) + 'px';\n    }, 300);\n\n    // scroll thumbnails to perfectly position active image thumbnail in viewport\n    private scrollThumbnails() {\n        // if thumbnails not visible, return false\n        if (this.conf.showThumbnails == false) return false;\n\n        let thumbnailParams = this.thumbnailsRenderParams;\n        this.thumbnailsScrollerLeftMargin = thumbnailParams.thumbnailsScrollerLeftMargin;\n    }\n\n    // debounced prev\n    private debouncedPrev = debounce(() => this.prev(), 100, {'leading': true, 'trailing': false});\n\n    // debounced next\n    private debouncedNext = debounce(() => this.next(), 100, {'leading': true, 'trailing': false});\n\n    /***************************************************/\n\n    constructor(\n        public sanitizer: DomSanitizer,\n        private galleryElem: ElementRef,\n        private renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    ngOnInit() {\n        // create final gallery configuration\n        this.setGalleryConf(this.conf);\n\n        // apply backdrop color\n        this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n        // gallery inline class and auto open\n        if (this.conf.inline) {\n            this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n            this.open(0);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // when gallery configuration changes\n        if (changes.conf && changes.conf.firstChange == false) {\n            this.setGalleryConf(changes.conf.currentValue);\n\n            // apply backdrop color\n            this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n            // gallery inline class and auto open\n            if ((changes.conf.previousValue.inline != true) && this.conf.inline) {\n                this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n                this.open(0);\n            }\n        }\n\n        // when gallery images changes\n        if (changes.images && changes.images.firstChange == false) {\n            this.images = changes.images.currentValue;\n\n            if (this.images.length) {\n                this.activateImage(0);\n            }\n        }\n\n    }\n\n    // keyboard event\n    @HostListener('window:keydown', ['$event'])\n    public onKeyboardInput(event: KeyboardEvent) {\n        if (this.conf.reactToKeyboard && this.opened && !this.loading) {\n            if (KEY_CODES[event.keyCode] == 'RIGHT') {\n                this.next();\n            }\n            else if (KEY_CODES[event.keyCode] == 'LEFT') {\n                this.prev();\n            }\n            else if ((KEY_CODES[event.keyCode] == 'ESC') && this.conf.closeOnEsc) {\n                this.close();\n            }\n        }\n    }\n\n    // window resize event\n    @HostListener('window:resize', ['$event'])\n    public onWindowResize(event: Event) {\n        if (this.opened && !this.loading) {\n            this.fitThumbnails();\n            setTimeout(() => this.scrollThumbnails(), 300);\n        }\n    }\n\n    /***************************************************/\n\n    // open gallery\n    open(index: number = 0) {\n        if (this.images.length) {\n            this.opened = true;\n\n            // emit event\n            this.onOpen.emit(index);\n\n            // activate image at given index\n            this.activateImage(index);\n        }\n        else {\n            console.warn('No images provided to ngx-image-gallery!');\n        }\n    }\n\n    // close gallery\n    close() {\n        this.opened = false;\n        this.activeImageIndex = 0;\n\n        // emit event\n        this.onClose.emit();\n    }\n\n    // change prev image\n    prev() {\n        if (this.onFirstImage == false) {\n            this.activateImage(this.activeImageIndex - 1);\n        }\n    }\n\n    // change next image\n    next() {\n        if (this.onLastImage == false) {\n            this.activateImage(this.activeImageIndex + 1);\n        }\n    }\n\n    // set image (activate)\n    setActiveImage(index: number) {\n        this.activateImage(index);\n    }\n\n    // delete image\n    deleteImage(index: number) {\n        this.onDelete.emit(index);\n    }\n\n    // mouse wheel up (prev image)\n    mouseWheelUp() {\n        if (this.conf.reactToMouseWheel) {\n            this.debouncedNext();\n        }\n    }\n\n    // mouse wheel down (next image)\n    mouseWheelDown() {\n        if (this.conf.reactToMouseWheel) {\n            this.debouncedPrev();\n        }\n    }\n\n    // click on image\n    clickOnImage(index: number) {\n        this.onImageClicked.emit(index);\n    }\n\n    // right click on image\n    rightClickOnImage(event: Event) {\n        event.stopPropagation();\n        return this.conf.reactToRightClick;\n    }\n\n}\n","import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n  @Output() clickOutside: EventEmitter<any> = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick($event, targetElement) {\n    const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!isClickedInside) {\n      this.clickOutside.emit($event);\n    }\n  }\n}","import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n@Directive({ selector: '[mouseWheel]' })\nexport class MouseWheelDirective {\n  @Output() mouseWheelUp = new EventEmitter();\n  @Output() mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event']) onMouseWheelChrome(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event']) onMouseWheelFirefox(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event']) onMouseWheelIE(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any) {\n    var event = window.event || event; // old IE support\n    var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n    if(delta > 0) {\n        this.mouseWheelUp.emit(event);\n    } else if(delta < 0) {\n        this.mouseWheelDown.emit(event);\n    }\n    // for IE\n    event.returnValue = false;\n    // for Chrome and Firefox\n    if(event.preventDefault) {\n        event.preventDefault();\n    }\n  }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgxImageGalleryComponent} from './components/ngx-image-gallery/ngx-image-gallery.component';\nimport {ClickOutsideDirective} from './directives/click-outside.directive';\nimport {MouseWheelDirective} from './directives/mousewheel.directive';\n\nexport * from './components/ngx-image-gallery/ngx-image-gallery.component';\nexport * from './directives/click-outside.directive';\nexport * from './directives/mousewheel.directive';\nexport * from './ngx-image-gallery.conf';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgxImageGalleryComponent,\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ],\n    exports: [\n        NgxImageGalleryComponent,\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ]\n})\nexport class NgxImageGalleryModule {\n}\n","/*\n * Public API Surface of ngx-image-gallery\n */\n\nexport * from './lib/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}